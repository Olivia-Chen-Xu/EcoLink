{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MapPage from \"./MapPage\";\nimport AddLocation from \"./AddLocation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function AllLocations(_ref) {\n  var currentLoc = _ref.currentLoc,\n      locations = _ref.locations,\n      setLocations = _ref.setLocations,\n      posts = _ref.posts,\n      setPosts = _ref.setPosts,\n      ownPosts = _ref.ownPosts,\n      setOwnPosts = _ref.setOwnPosts;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      addedNew = _useState2[0],\n      setAddedNew = _useState2[1];\n\n  return currentLoc && _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"MapPage\",\n      options: {\n        headerShown: false\n      },\n      children: function children(props) {\n        return _jsx(MapPage, _objectSpread(_objectSpread({}, props), {}, {\n          currentLoc: currentLoc,\n          locations: locations,\n          addLocationEnabled: true,\n          scanAnotherEnabled: false,\n          addedNew: addedNew,\n          setAddedNew: setAddedNew\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AddLocation\",\n      options: {\n        headerShown: false\n      },\n      children: function children(props) {\n        return _jsx(AddLocation, _objectSpread(_objectSpread({}, props), {}, {\n          currentLoc: currentLoc,\n          locations: locations,\n          setLocations: setLocations,\n          setAddedNew: setAddedNew,\n          posts: posts,\n          setPosts: setPosts,\n          ownPosts: ownPosts,\n          setOwnPosts: setOwnPosts\n        }));\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/oliviachenxu/Documents/QueensGDSC/App/pages/AllLocations.js"],"names":["React","useState","NavigationContainer","useNavigation","createNativeStackNavigator","MapPage","AddLocation","Stack","AllLocations","currentLoc","locations","setLocations","posts","setPosts","ownPosts","setOwnPosts","addedNew","setAddedNew","headerShown","props"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAmD,0BAAnD;;;;;;AAEA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAOC,OAAP;AACA,OAAOC,WAAP;;;AAEA,IAAMC,KAAK,GAAGH,0BAA0B,EAAxC;AAEA,eAAe,SAASI,YAAT,OAQZ;AAAA,MAPCC,UAOD,QAPCA,UAOD;AAAA,MANCC,SAMD,QANCA,SAMD;AAAA,MALCC,YAKD,QALCA,YAKD;AAAA,MAJCC,KAID,QAJCA,KAID;AAAA,MAHCC,QAGD,QAHCA,QAGD;AAAA,MAFCC,QAED,QAFCA,QAED;AAAA,MADCC,WACD,QADCA,WACD;;AACC,kBAAgCd,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAiBC,WAAjB;;AACA,SACIR,UAAU,IACN,MAAC,KAAD,CAAO,SAAP;AAAA,eACI,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,OAAO,EAAE;AAAES,QAAAA,WAAW,EAAE;AAAf,OAAtC;AAAA,gBACK,kBAACC,KAAD;AAAA,eACG,KAAC,OAAD,kCACQA,KADR;AAEI,UAAA,UAAU,EAAEV,UAFhB;AAGI,UAAA,SAAS,EAAEC,SAHf;AAII,UAAA,kBAAkB,EAAE,IAJxB;AAKI,UAAA,kBAAkB,EAAE,KALxB;AAMI,UAAA,QAAQ,EAAEM,QANd;AAOI,UAAA,WAAW,EAAEC;AAPjB,WADH;AAAA;AADL,MADJ,EAcI,KAAC,KAAD,CAAO,MAAP;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,OAAO,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAFb;AAAA,gBAIK,kBAACC,KAAD;AAAA,eACG,KAAC,WAAD,kCACQA,KADR;AAEI,UAAA,UAAU,EAAEV,UAFhB;AAGI,UAAA,SAAS,EAAEC,SAHf;AAII,UAAA,YAAY,EAAEC,YAJlB;AAKI,UAAA,WAAW,EAAEM,WALjB;AAMI,UAAA,KAAK,EAAEL,KANX;AAOI,UAAA,QAAQ,EAAEC,QAPd;AAQI,UAAA,QAAQ,EAAEC,QARd;AASI,UAAA,WAAW,EAAEC;AATjB,WADH;AAAA;AAJL,MAdJ;AAAA,IAFR;AAqCH","sourcesContent":["import React, { useState } from \"react\";\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\nimport { View, TouchableOpacity, Text, Image, Button } from \"react-native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nimport MapPage from \"./MapPage\";\nimport AddLocation from \"./AddLocation\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function AllLocations({\n    currentLoc,\n    locations,\n    setLocations,\n    posts,\n    setPosts,\n    ownPosts,\n    setOwnPosts,\n}) {\n    const [addedNew, setAddedNew] = useState(false);\n    return (\n        currentLoc && (\n            <Stack.Navigator>\n                <Stack.Screen name=\"MapPage\" options={{ headerShown: false }}>\n                    {(props) => (\n                        <MapPage\n                            {...props}\n                            currentLoc={currentLoc}\n                            locations={locations}\n                            addLocationEnabled={true}\n                            scanAnotherEnabled={false}\n                            addedNew={addedNew}\n                            setAddedNew={setAddedNew}\n                        ></MapPage>\n                    )}\n                </Stack.Screen>\n                <Stack.Screen\n                    name=\"AddLocation\"\n                    options={{ headerShown: false }}\n                >\n                    {(props) => (\n                        <AddLocation\n                            {...props}\n                            currentLoc={currentLoc}\n                            locations={locations}\n                            setLocations={setLocations}\n                            setAddedNew={setAddedNew}\n                            posts={posts}\n                            setPosts={setPosts}\n                            ownPosts={ownPosts}\n                            setOwnPosts={setOwnPosts}\n                        ></AddLocation>\n                    )}\n                </Stack.Screen>\n            </Stack.Navigator>\n        )\n    );\n}\n"]},"metadata":{},"sourceType":"module"}