{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MapView, { PROVIDER_GOOGLE, Marker, Callout } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentLoc = _useState2[0],\n      setCurrentLoc = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      locations = _useState6[0],\n      setLocations = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"hey\");\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 3:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== \"granted\")) {\n                _context.next = 8;\n                break;\n              }\n\n              setErrorMsg(\"Permission to access location was denied\");\n              return _context.abrupt(\"return\");\n\n            case 8:\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 10:\n              location = _context.sent;\n              setCurrentLoc(location);\n              console.log(location);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, []);\n  var text = \"Waiting..\";\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (currentLoc) {\n    text = JSON.stringify(currentLoc);\n  }\n\n  return !currentLoc ? _jsx(_Fragment, {\n    children: console.log(\"null\")\n  }) : _jsx(MapView, {\n    provider: PROVIDER_GOOGLE,\n    style: styles.map,\n    initialRegion: {\n      latitude: currentLoc.coords.latitude,\n      longitude: currentLoc.coords.longitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    showsUserLocation: true,\n    followsUserLocation: true,\n    showsMyLocationButton: true\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    padding: 10\n  },\n  map: _objectSpread({}, StyleSheet.absoluteFillObject)\n});","map":{"version":3,"sources":["/Users/oliviachenxu/Documents/GoogleLocation/App.js"],"names":["React","useState","useEffect","StatusBar","MapView","PROVIDER_GOOGLE","Marker","Callout","Location","App","currentLoc","setCurrentLoc","errorMsg","setErrorMsg","locations","setLocations","console","log","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","location","text","JSON","stringify","styles","map","latitude","coords","longitude","latitudeDelta","longitudeDelta","StyleSheet","create","container","backgroundColor","justifyContent","alignItems","padding","absoluteFillObject"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;AAEA,OAAOC,OAAP,IAAkBC,eAAlB,EAAmCC,MAAnC,EAA2CC,OAA3C,QAA0D,mBAA1D;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC1B,kBAAoCR,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAOS,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAgCV,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,mBAAkCZ,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOa,SAAP;AAAA,MAAkBC,YAAlB;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIc,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AADJ;AAAA,+CAE2BT,QAAQ,CAACU,iCAAT,EAF3B;;AAAA;AAAA;AAEUC,cAAAA,MAFV,yBAEUA,MAFV;;AAAA,oBAGQA,MAAM,KAAK,SAHnB;AAAA;AAAA;AAAA;;AAIQN,cAAAA,WAAW,CAAC,0CAAD,CAAX;AAJR;;AAAA;AAAA;AAAA,+CAQyBL,QAAQ,CAACY,uBAAT,CAAiC,EAAjC,CARzB;;AAAA;AAQQC,cAAAA,QARR;AASIV,cAAAA,aAAa,CAACU,QAAD,CAAb;AACAL,cAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBH,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,MAAIC,IAAI,GAAG,WAAX;;AACA,MAAIV,QAAJ,EAAc;AACVU,IAAAA,IAAI,GAAGV,QAAP;AACH,GAFD,MAEO,IAAIF,UAAJ,EAAgB;AACnBY,IAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAed,UAAf,CAAP;AACH;;AAED,SAAO,CAACA,UAAD,GACH;AAAA,cAAGM,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAH,IADG,GAGH,KAAC,OAAD;AACI,IAAA,QAAQ,EAAEZ,eADd;AAEI,IAAA,KAAK,EAAEoB,MAAM,CAACC,GAFlB;AAGI,IAAA,aAAa,EAAE;AACXC,MAAAA,QAAQ,EAAEjB,UAAU,CAACkB,MAAX,CAAkBD,QADjB;AAEXE,MAAAA,SAAS,EAAEnB,UAAU,CAACkB,MAAX,CAAkBC,SAFlB;AAGXC,MAAAA,aAAa,EAAE,MAHJ;AAIXC,MAAAA,cAAc,EAAE;AAJL,KAHnB;AASI,IAAA,iBAAiB,EAAE,IATvB;AAUI,IAAA,mBAAmB,EAAE,IAVzB;AAWI,IAAA,qBAAqB,EAAE;AAX3B,IAHJ;AAgCH;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,eAAe,EAAE,OADV;AAEPC,IAAAA,cAAc,EAAE,UAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,OAAO,EAAE;AAJF,GADkB;AAO7BZ,EAAAA,GAAG,oBACIM,UAAU,CAACO,kBADf;AAP0B,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport MapView, { PROVIDER_GOOGLE, Marker, Callout } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\n\nexport default function App() {\n    const [currentLoc, setCurrentLoc] = useState(null);\n    const [errorMsg, setErrorMsg] = useState(null);\n\n    const [locations, setLocations] = useState(null);\n\n    useEffect(() => {\n        async () => {\n            console.log(\"hey\");\n            let { status } = await Location.requestForegroundPermissionsAsync();\n            if (status !== \"granted\") {\n                setErrorMsg(\"Permission to access location was denied\");\n                return;\n            }\n\n            let location = await Location.getCurrentPositionAsync({});\n            setCurrentLoc(location);\n            console.log(location);\n            // setLocations([\n            //     {\n            //         name: \"Recycling station 1\",\n            //         latitude: currentLoc.coords.latitude + 0.005,\n            //         longitude: currentLoc.coords.longitude,\n            //     },\n            //     {\n            //         name: \"Recycling station 2\",\n            //         latitude: currentLoc.coords.latitude,\n            //         longitude: currentLoc.coords.longitude + 0.005,\n            //     },\n            // ]);\n            //console.log(location);\n        };\n    }, []);\n\n    let text = \"Waiting..\";\n    if (errorMsg) {\n        text = errorMsg;\n    } else if (currentLoc) {\n        text = JSON.stringify(currentLoc);\n    }\n\n    return !currentLoc ? (\n        <>{console.log(\"null\")}</>\n    ) : (\n        <MapView\n            provider={PROVIDER_GOOGLE}\n            style={styles.map}\n            initialRegion={{\n                latitude: currentLoc.coords.latitude,\n                longitude: currentLoc.coords.longitude,\n                latitudeDelta: 0.0922,\n                longitudeDelta: 0.0421,\n            }}\n            showsUserLocation={true}\n            followsUserLocation={true}\n            showsMyLocationButton={true}\n        >\n            {/* {locations.map((loc) => (\n                <Marker\n                    coordinate={{\n                        latitude: loc.latitude,\n                        longitude: loc.longitude,\n                    }}\n                >\n                    <Callout tooltip>\n                        <View style={styles.container}>\n                            <Text>{loc.name}</Text>\n                        </View>\n                    </Callout>\n                </Marker>\n            ))} */}\n        </MapView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"white\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        padding: 10,\n    },\n    map: {\n        ...StyleSheet.absoluteFillObject,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}