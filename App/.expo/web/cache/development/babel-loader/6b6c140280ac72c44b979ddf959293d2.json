{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { FontAwesome, Feather } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddPost(_ref) {\n  var navigation = _ref.navigation,\n      posts = _ref.posts,\n      setPosts = _ref.setPosts,\n      ownPosts = _ref.ownPosts,\n      setOwnPosts = _ref.setOwnPosts;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPicker = _useState4[0],\n      setShowPicker = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n            setShowPicker(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openCamera = function openCamera() {\n    var permissionResult, result;\n    return _regeneratorRuntime.async(function openCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 2:\n            permissionResult = _context2.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context2.next = 6;\n              break;\n            }\n\n            alert(\"You've refused to allow this appp to access your camera!\");\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n          case 8:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n              setShowPicker(false);\n              console.log(result.uri);\n            }\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addNewPost = function addNewPost() {\n    navigation.navigate(\"Posts\");\n    setPosts([{\n      user: \"Olivia\",\n      userInfo: \"CS Student at Queen's\",\n      pfp: \"/Users/oliviachenxu/Documents/QueensGDSC/App/assets/olivia.jpg\",\n      image: image,\n      description: text,\n      createdAt: new Date()\n    }].concat(_toConsumableArray(posts)));\n    console.log(ownPosts);\n    setOwnPosts([{\n      user: \"Olivia\",\n      userInfo: \"CS Student at Queen's\",\n      pfp: \"/Users/oliviachenxu/Documents/QueensGDSC/App/assets/olivia.jpg\",\n      image: image,\n      description: text,\n      createdAt: new Date()\n    }].concat(_toConsumableArray(ownPosts)));\n    setImage(null);\n    setText(null);\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      backgroundColor: \"white\",\n      paddingHorizontal: 40\n    },\n    children: [_jsxs(TouchableOpacity, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        position: \"absolute\",\n        top: 60\n      },\n      onPress: function onPress() {\n        navigation.navigate(\"Posts\");\n        setImage(null);\n        setText(null);\n      },\n      children: [_jsx(Feather, {\n        name: \"chevrons-left\",\n        size: 30,\n        color: \"#5DB075\"\n      }), _jsx(Text, {\n        style: {\n          color: \"#5DB075\",\n          fontWeight: \"600\",\n          fontSize: 16\n        },\n        children: \"Back\"\n      })]\n    }), _jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: \"700\",\n        marginBottom: 20\n      },\n      children: \"Create New Post\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setText,\n      value: text,\n      selectionColor: \"#4B9460\",\n      placeholder: \"Say something...\",\n      multiline: true\n    }), !image && _jsxs(TouchableOpacity, {\n      style: styles.add_photo,\n      onPress: function onPress() {\n        return setShowPicker(true);\n      },\n      children: [_jsx(FontAwesome, {\n        name: \"photo\",\n        size: 30,\n        color: \"#5DB075\"\n      }), _jsx(Text, {\n        style: {\n          color: \"#5DB075\",\n          fontSize: 18,\n          fontWeight: \"600\",\n          marginLeft: 20\n        },\n        children: \"Add A Photo\"\n      })]\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        height: 200,\n        borderRadius: 10,\n        marginTop: 15\n      }\n    }), _jsx(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, styles.add_photo), {}, {\n        backgroundColor: \"#5DB075\"\n      }),\n      onPress: addNewPost,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\",\n          fontSize: 18,\n          fontWeight: \"600\"\n        },\n        children: \"Done\"\n      })\n    }), showPicker && _jsxs(View, {\n      style: {\n        position: \"absolute\",\n        backgroundColor: \"white\",\n        alignSelf: \"center\",\n        borderRadius: 10,\n        shadowColor: \"black\",\n        shadowOpacity: 0.2,\n        shadowRadius: 50,\n        paddingHorizontal: 10,\n        paddingVertical: 10\n      },\n      children: [_jsx(Button, {\n        onPress: openCamera,\n        title: \"Open camera\",\n        color: \"grey\"\n      }), _jsx(Button, {\n        title: \"Pick an image from camera roll\",\n        onPress: pickImage,\n        color: \"grey\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  add_photo: {\n    flexDirection: \"row\",\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 12,\n    borderColor: \"#5DB075\",\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 15\n  },\n  input: {\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 12,\n    height: 150,\n    paddingHorizontal: 15,\n    paddingTop: 10,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/Users/oliviachenxu/Documents/QueensGDSC/App/pages/AddPost.js"],"names":["React","useState","FontAwesome","Feather","ImagePicker","AddPost","navigation","posts","setPosts","ownPosts","setOwnPosts","image","setImage","showPicker","setShowPicker","text","setText","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","quality","result","console","log","cancelled","uri","openCamera","requestCameraPermissionsAsync","permissionResult","granted","alert","launchCameraAsync","addNewPost","navigate","user","userInfo","pfp","description","createdAt","Date","flex","justifyContent","backgroundColor","paddingHorizontal","flexDirection","alignItems","position","top","color","fontWeight","fontSize","marginBottom","styles","input","add_photo","marginLeft","height","borderRadius","marginTop","alignSelf","shadowColor","shadowOpacity","shadowRadius","paddingVertical","StyleSheet","create","borderWidth","borderColor","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    View,\n    Text,\n    SafeAreaView,\n    Image,\n    ScrollView,\n    TouchableOpacity,\n    StyleSheet,\n    TextInput,\n    Button,\n} from \"react-native\";\nimport { FontAwesome, Feather } from \"react-native-vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nexport default function AddPost({\n    navigation,\n    posts,\n    setPosts,\n    ownPosts,\n    setOwnPosts,\n}) {\n    const [image, setImage] = useState(null);\n    const [showPicker, setShowPicker] = useState(false);\n    const [text, setText] = useState(\"\");\n    const pickImage = async () => {\n        // No permissions request is necessary for launching the image library\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            //allowsEditing: true,\n            //aspect: [4, 3],\n            quality: 1,\n        });\n\n        console.log(result);\n\n        if (!result.cancelled) {\n            setImage(result.uri);\n        }\n        setShowPicker(false);\n    };\n    const openCamera = async () => {\n        // Ask the user for the permission to access the camera\n        const permissionResult =\n            await ImagePicker.requestCameraPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert(\"You've refused to allow this appp to access your camera!\");\n            return;\n        }\n\n        const result = await ImagePicker.launchCameraAsync();\n\n        // Explore the result\n        console.log(result);\n\n        if (!result.cancelled) {\n            setImage(result.uri);\n            setShowPicker(false);\n            console.log(result.uri);\n        }\n    };\n\n    const addNewPost = () => {\n        navigation.navigate(\"Posts\");\n        setPosts([\n            {\n                user: \"Olivia\",\n                userInfo: \"CS Student at Queen's\",\n                pfp: \"/Users/oliviachenxu/Documents/QueensGDSC/App/assets/olivia.jpg\",\n                image: image,\n                description: text,\n                createdAt: new Date(),\n            },\n            ...posts,\n        ]);\n        console.log(ownPosts);\n        setOwnPosts([\n            {\n                user: \"Olivia\",\n                userInfo: \"CS Student at Queen's\",\n                pfp: \"/Users/oliviachenxu/Documents/QueensGDSC/App/assets/olivia.jpg\",\n                image: image,\n                description: text,\n                createdAt: new Date(),\n            },\n            ...ownPosts,\n        ]);\n\n        setImage(null);\n        setText(null);\n    };\n    return (\n        <View\n            style={{\n                flex: 1,\n                justifyContent: \"center\",\n                backgroundColor: \"white\",\n                paddingHorizontal: 40,\n            }}\n        >\n            <TouchableOpacity\n                style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    position: \"absolute\",\n                    top: 60,\n                }}\n                onPress={() => {\n                    navigation.navigate(\"Posts\");\n                    setImage(null);\n                    setText(null);\n                }}\n            >\n                <Feather\n                    name=\"chevrons-left\"\n                    size={30}\n                    color=\"#5DB075\"\n                ></Feather>\n                <Text\n                    style={{\n                        color: \"#5DB075\",\n                        fontWeight: \"600\",\n                        fontSize: 16,\n                    }}\n                >\n                    Back\n                </Text>\n            </TouchableOpacity>\n            <Text\n                style={{\n                    fontSize: 24,\n                    fontWeight: \"700\",\n                    marginBottom: 20,\n                }}\n            >\n                Create New Post\n            </Text>\n            <TextInput\n                style={styles.input}\n                onChangeText={setText}\n                value={text}\n                selectionColor={\"#4B9460\"}\n                placeholder=\"Say something...\"\n                multiline={true}\n            />\n            {!image && (\n                <TouchableOpacity\n                    style={styles.add_photo}\n                    onPress={() => setShowPicker(true)}\n                >\n                    <FontAwesome\n                        name=\"photo\"\n                        size={30}\n                        color=\"#5DB075\"\n                    ></FontAwesome>\n                    <Text\n                        style={{\n                            color: \"#5DB075\",\n                            fontSize: 18,\n                            fontWeight: \"600\",\n                            marginLeft: 20,\n                        }}\n                    >\n                        Add A Photo\n                    </Text>\n                </TouchableOpacity>\n            )}\n\n            {image && (\n                <Image\n                    source={{ uri: image }}\n                    style={{\n                        height: 200,\n                        borderRadius: 10,\n                        marginTop: 15,\n                    }}\n                />\n            )}\n\n            <TouchableOpacity\n                style={{ ...styles.add_photo, backgroundColor: \"#5DB075\" }}\n                onPress={addNewPost}\n            >\n                <Text\n                    style={{\n                        color: \"white\",\n                        fontSize: 18,\n                        fontWeight: \"600\",\n                    }}\n                >\n                    Done\n                </Text>\n            </TouchableOpacity>\n            {showPicker && (\n                <View\n                    style={{\n                        position: \"absolute\",\n                        backgroundColor: \"white\",\n                        alignSelf: \"center\",\n                        borderRadius: 10,\n                        shadowColor: \"black\",\n                        shadowOpacity: 0.2,\n                        shadowRadius: 50,\n                        paddingHorizontal: 10,\n                        paddingVertical: 10,\n                    }}\n                >\n                    <Button\n                        onPress={openCamera}\n                        title=\"Open camera\"\n                        color={\"grey\"}\n                    />\n                    <Button\n                        title=\"Pick an image from camera roll\"\n                        onPress={pickImage}\n                        color={\"grey\"}\n                    />\n                </View>\n            )}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    add_photo: {\n        flexDirection: \"row\",\n        backgroundColor: \"white\",\n        borderWidth: 1,\n        borderRadius: 12,\n        borderColor: \"#5DB075\",\n        height: 50,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 15,\n    },\n    input: {\n        backgroundColor: \"#F6F6F6\",\n        borderRadius: 12,\n        height: 150,\n        paddingHorizontal: 15,\n        paddingTop: 10,\n        marginBottom: 10,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}