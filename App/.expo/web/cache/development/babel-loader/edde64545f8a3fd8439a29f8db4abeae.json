{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { ImageStore } from \"react-native-web/dist/index\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport MapView, { PROVIDER_GOOGLE, Marker, Callout } from \"react-native-maps\";\nimport { Feather, FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport * as Location from \"expo-location\";\nimport Animated from \"react-native-reanimated\";\nimport { BottomSheet } from \"react-native-elements\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MapPage(_ref) {\n  var currentLoc = _ref.currentLoc,\n      locations = _ref.locations,\n      navigation = _ref.navigation,\n      addLocationEnabled = _ref.addLocationEnabled,\n      scanAnotherEnabled = _ref.scanAnotherEnabled,\n      addedNew = _ref.addedNew,\n      setAddedNew = _ref.setAddedNew;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showInfo = _useState2[0],\n      setShowInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showImage = _useState4[0],\n      setShowImage = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedLoc = _useState8[0],\n      setSelectedLoc = _useState8[1];\n\n  var InfoCard = function InfoCard() {\n    return selectedLoc && _jsx(BottomSheet, {\n      isVisible: showInfo,\n      containerStyle: {\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n        top: 100,\n        marginHorizontal: 10\n      },\n      children: _jsxs(View, {\n        style: styles.info,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setShowInfo(false);\n          },\n          children: _jsx(FontAwesome, {\n            name: \"sort-down\",\n            size: 30,\n            style: {\n              opacity: 0.5\n            }\n          })\n        }), _jsxs(ScrollView, {\n          style: {\n            height: 350\n          },\n          children: [!selectedLoc.image ? _jsx(View, {\n            style: styles.no_image,\n            children: _jsx(Text, {\n              children: \"no image\"\n            })\n          }) : _jsx(_Fragment, {\n            children: _jsx(Image, {\n              source: {\n                uri: selectedLoc.image\n              },\n              style: styles.loc_image\n            })\n          }), _jsx(Text, {\n            style: {\n              fontSize: 24,\n              fontWeight: \"700\",\n              marginVertical: 8\n            },\n            children: selectedLoc.name\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              flexWrap: \"wrap\"\n            },\n            children: selectedLoc.tags.map(function (tag) {\n              return _jsx(View, {\n                style: styles.tags,\n                children: _jsx(Text, {\n                  style: {\n                    color: \"white\",\n                    fontSize: 12,\n                    fontWeight: \"500\"\n                  },\n                  children: tag\n                })\n              });\n            })\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"Number of community drop offs: \" + selectedLoc.numOfDropOffs\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"Total tons of garbage recycled: \" + selectedLoc.tonsRecycled\n          }), _jsx(View, {})]\n        })]\n      })\n    });\n  };\n\n  return !locations ? _jsx(_Fragment, {}) : _jsxs(View, {\n    style: styles.page,\n    children: [_jsx(MapView, {\n      provider: PROVIDER_GOOGLE,\n      style: styles.map,\n      initialRegion: {\n        latitude: currentLoc.coords.latitude,\n        longitude: currentLoc.coords.longitude,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.02\n      },\n      showsUserLocation: true,\n      followsUserLocation: true,\n      showsMyLocationButton: true,\n      children: locations.map(function (loc) {\n        return _jsxs(Marker, {\n          coordinate: {\n            latitude: loc.latitude,\n            longitude: loc.longitude\n          },\n          onPress: function onPress() {\n            setShowInfo(true);\n            setSelectedLoc(loc);\n          },\n          children: [_jsx(Ionicons, {\n            name: \"location\",\n            size: 40,\n            color: \"#4B9460\"\n          }), _jsx(Callout, {\n            tooltip: true,\n            style: styles.container,\n            children: _jsx(View, {\n              children: _jsx(Text, {\n                children: \"\\uD83D\\uDCCD \" + loc.name + \" \\uD83D\\uDCCD\"\n              })\n            })\n          })]\n        });\n      })\n    }), _jsxs(SafeAreaView, {\n      children: [scanAnotherEnabled && _jsxs(TouchableOpacity, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          position: \"absolute\",\n          top: 60\n        },\n        onPress: function onPress() {\n          return navigation.navigate(\"Main\");\n        },\n        children: [_jsx(Feather, {\n          name: \"chevrons-left\",\n          size: 30,\n          color: \"#5DB075\"\n        }), _jsx(Text, {\n          style: {\n            color: \"#5DB075\",\n            fontWeight: \"600\",\n            fontSize: 16\n          },\n          children: \"Back\"\n        })]\n      }), addLocationEnabled && _jsxs(_Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.add,\n          onPress: function onPress() {\n            return navigation.navigate(\"AddLocation\");\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\",\n              fontWeight: \"700\",\n              fontSize: 16,\n              textAlign: \"center\"\n            },\n            children: \"Record Current Location!\"\n          })\n        }), _jsx(BottomSheet, {\n          isVisible: addedNew,\n          containerStyle: {\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            top: 120,\n            marginHorizontal: 10\n          },\n          children: _jsx(View, {\n            style: styles.reward,\n            children: _jsxs(TouchableOpacity, {\n              onPress: function onPress() {\n                setAddedNew(false);\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontSize: 18,\n                  fontWeight: \"600\",\n                  color: \"#5DB075\",\n                  textAlign: \"center\",\n                  marginBottom: 10\n                },\n                children: \"New Location Added!\"\n              }), _jsx(Text, {\n                style: {\n                  fontSize: 24,\n                  fontWeight: \"700\",\n                  textAlign: \"center\"\n                },\n                children: \"\\uD83C\\uDF89 100 Points Earned! \\uD83C\\uDF89\"\n              })]\n            })\n          })\n        })]\n      }), _jsx(InfoCard, {})]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  page: {\n    flex: 1\n  },\n  text: {\n    opacity: 0.6,\n    marginTop: 1\n  },\n  container: {\n    backgroundColor: \"white\",\n    width: 150,\n    borderRadius: 5,\n    alignItems: \"center\",\n    padding: 10\n  },\n  add: {\n    width: 200,\n    alignSelf: \"center\",\n    backgroundColor: \"#5DB075\",\n    borderRadius: 30,\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    alignItems: \"center\"\n  },\n  bin: {\n    width: 15,\n    height: 25\n  },\n  info: {\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    paddingHorizontal: 20,\n    paddingBottom: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  no_image: {\n    width: 300,\n    height: 200,\n    backgroundColor: \"grey\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginVertical: 8,\n    borderRadius: 10\n  },\n  loc_image: {\n    width: 300,\n    height: 200,\n    marginVertical: 8,\n    borderRadius: 10\n  },\n  tags: {\n    backgroundColor: \"#5DB075\",\n    paddingHorizontal: 8,\n    paddingVertical: 5,\n    borderRadius: 8,\n    marginRight: 5,\n    marginBottom: 10\n  },\n  reward: {\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    paddingHorizontal: 20,\n    paddingVertical: 20,\n    alignItems: \"center\"\n  },\n  map: _objectSpread({}, StyleSheet.absoluteFillObject)\n});","map":{"version":3,"sources":["/Users/oliviachenxu/Documents/QueensGDSC/App/pages/MapPage.js"],"names":["React","useState","useEffect","useRef","StatusBar","ImageStore","MapView","PROVIDER_GOOGLE","Marker","Callout","Feather","FontAwesome","Ionicons","MapViewDirections","Location","Animated","BottomSheet","MapPage","currentLoc","locations","navigation","addLocationEnabled","scanAnotherEnabled","addedNew","setAddedNew","showInfo","setShowInfo","showImage","setShowImage","loading","setLoading","selectedLoc","setSelectedLoc","InfoCard","backgroundColor","top","marginHorizontal","styles","info","opacity","height","image","no_image","uri","loc_image","fontSize","fontWeight","marginVertical","name","flexDirection","flexWrap","tags","map","tag","color","text","numOfDropOffs","tonsRecycled","page","latitude","coords","longitude","latitudeDelta","longitudeDelta","loc","container","alignItems","position","navigate","add","textAlign","reward","marginBottom","StyleSheet","create","flex","marginTop","width","borderRadius","padding","alignSelf","paddingHorizontal","paddingVertical","bin","paddingBottom","justifyContent","marginRight","absoluteFillObject"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TouchableOpacity,\n    SafeAreaView,\n    Image,\n    Button,\n    Modal,\n    ImageStore,\n    ScrollView,\n    ActivityIndicator,\n} from \"react-native\";\nimport MapView, { PROVIDER_GOOGLE, Marker, Callout } from \"react-native-maps\";\nimport { Feather, FontAwesome, Ionicons } from \"react-native-vector-icons\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport * as Location from \"expo-location\";\nimport Animated from \"react-native-reanimated\";\nimport { BottomSheet } from \"react-native-elements\";\n\nexport default function MapPage({\n    currentLoc,\n    locations,\n    navigation,\n    addLocationEnabled,\n    scanAnotherEnabled,\n    addedNew,\n    setAddedNew,\n}) {\n    const [showInfo, setShowInfo] = useState(false);\n    const [showImage, setShowImage] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [selectedLoc, setSelectedLoc] = useState(null);\n\n    const InfoCard = () => {\n        return (\n            selectedLoc && (\n                <BottomSheet\n                    isVisible={showInfo}\n                    containerStyle={{\n                        backgroundColor: \"rgba(0, 0, 0, 0)\",\n                        top: 100,\n                        marginHorizontal: 10,\n                    }}\n                >\n                    <View style={styles.info}>\n                        <TouchableOpacity\n                            onPress={() => {\n                                setShowInfo(false);\n                            }}\n                        >\n                            <FontAwesome\n                                name=\"sort-down\"\n                                size={30}\n                                style={{ opacity: 0.5 }}\n                            ></FontAwesome>\n                        </TouchableOpacity>\n                        <ScrollView style={{ height: 350 }}>\n                            {!selectedLoc.image ? (\n                                <View style={styles.no_image}>\n                                    <Text>no image</Text>\n                                </View>\n                            ) : (\n                                <>\n                                    <Image\n                                        source={{ uri: selectedLoc.image }}\n                                        style={styles.loc_image}\n                                        // onLoadStart={() => setLoading(true)}\n                                        // onLoadEnd={() => setLoading(false)}\n                                    ></Image>\n                                    {/* {loading && (\n                                        <ActivityIndicator\n                                            size=\"large\"\n                                            color=\"#4B9460\"\n                                            marginTop={20}\n                                        />\n                                    )} */}\n                                </>\n\n                                // <>\n                                //     <TouchableOpacity\n                                //         onPress={() => setShowImage(true)}\n                                //     >\n\n                                //     </TouchableOpacity>\n                                // </>\n                            )}\n                            <Text\n                                style={{\n                                    fontSize: 24,\n                                    fontWeight: \"700\",\n                                    marginVertical: 8,\n                                }}\n                            >\n                                {selectedLoc.name}\n                            </Text>\n                            <View\n                                style={{\n                                    flexDirection: \"row\",\n                                    flexWrap: \"wrap\",\n                                }}\n                            >\n                                {selectedLoc.tags.map((tag) => (\n                                    <View style={styles.tags}>\n                                        <Text\n                                            style={{\n                                                color: \"white\",\n                                                fontSize: 12,\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            {tag}\n                                        </Text>\n                                    </View>\n                                ))}\n                            </View>\n                            <Text\n                                style={styles.text}\n                            >{`Number of community drop offs: ${selectedLoc.numOfDropOffs}`}</Text>\n                            <Text\n                                style={styles.text}\n                            >{`Total tons of garbage recycled: ${selectedLoc.tonsRecycled}`}</Text>\n\n                            <View></View>\n                        </ScrollView>\n                    </View>\n                </BottomSheet>\n            )\n        );\n    };\n\n    return !locations ? (\n        <></>\n    ) : (\n        <View style={styles.page}>\n            <MapView\n                provider={PROVIDER_GOOGLE}\n                style={styles.map}\n                initialRegion={{\n                    latitude: currentLoc.coords.latitude,\n                    longitude: currentLoc.coords.longitude,\n                    latitudeDelta: 0.01,\n                    longitudeDelta: 0.02,\n                }}\n                showsUserLocation={true}\n                followsUserLocation={true}\n                showsMyLocationButton={true}\n            >\n                {locations.map((loc) => (\n                    <Marker\n                        coordinate={{\n                            latitude: loc.latitude,\n                            longitude: loc.longitude,\n                        }}\n                        onPress={() => {\n                            setShowInfo(true);\n                            setSelectedLoc(loc);\n                        }}\n                    >\n                        <Ionicons\n                            name=\"location\"\n                            size={40}\n                            color=\"#4B9460\"\n                        ></Ionicons>\n                        <Callout tooltip style={styles.container}>\n                            <View>\n                                <Text>{`📍 ${loc.name} 📍`}</Text>\n                            </View>\n                        </Callout>\n                    </Marker>\n                ))}\n            </MapView>\n            <SafeAreaView>\n                {scanAnotherEnabled && (\n                    <TouchableOpacity\n                        style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            position: \"absolute\",\n                            top: 60,\n                        }}\n                        onPress={() => navigation.navigate(\"Main\")}\n                    >\n                        <Feather\n                            name=\"chevrons-left\"\n                            size={30}\n                            color=\"#5DB075\"\n                        ></Feather>\n                        <Text\n                            style={{\n                                color: \"#5DB075\",\n                                fontWeight: \"600\",\n                                fontSize: 16,\n                            }}\n                        >\n                            Back\n                        </Text>\n                    </TouchableOpacity>\n                )}\n                {addLocationEnabled && (\n                    <>\n                        <TouchableOpacity\n                            style={styles.add}\n                            onPress={() => navigation.navigate(\"AddLocation\")}\n                        >\n                            <Text\n                                style={{\n                                    color: \"white\",\n                                    fontWeight: \"700\",\n                                    fontSize: 16,\n                                    textAlign: \"center\",\n                                }}\n                            >\n                                Record Current Location!\n                            </Text>\n                        </TouchableOpacity>\n                        <BottomSheet\n                            isVisible={addedNew}\n                            containerStyle={{\n                                backgroundColor: \"rgba(0, 0, 0, 0)\",\n                                top: 120,\n                                marginHorizontal: 10,\n                            }}\n                        >\n                            <View style={styles.reward}>\n                                <TouchableOpacity\n                                    onPress={() => {\n                                        setAddedNew(false);\n                                    }}\n                                >\n                                    <Text\n                                        style={{\n                                            fontSize: 18,\n                                            fontWeight: \"600\",\n                                            color: \"#5DB075\",\n                                            textAlign: \"center\",\n                                            marginBottom: 10,\n                                        }}\n                                    >\n                                        New Location Added!\n                                    </Text>\n                                    <Text\n                                        style={{\n                                            fontSize: 24,\n                                            fontWeight: \"700\",\n                                            textAlign: \"center\",\n                                        }}\n                                    >\n                                        🎉 100 Points Earned! 🎉\n                                    </Text>\n                                    {/* <FontAwesome\n                                        name=\"sort-down\"\n                                        size={30}\n                                        style={{\n                                            opacity: 0.5,\n                                        }}\n                                    ></FontAwesome> */}\n                                </TouchableOpacity>\n                            </View>\n                        </BottomSheet>\n                    </>\n                )}\n                <InfoCard></InfoCard>\n                {/* {selectedLoc && (\n                    <Modal\n                        animationType=\"fade\"\n                        transparent={true}\n                        visible={showImage}\n                    >\n                        <TouchableOpacity\n                            activeOpacity={1}\n                            onPress={() => {\n                                setShowImage(false);\n                            }}\n                        >\n                            <Image\n                                source={{\n                                    uri: selectedLoc.image,\n                                    width: 200,\n                                    height: 200,\n                                }}\n                            ></Image>\n                        </TouchableOpacity>\n                    </Modal>\n                )} */}\n            </SafeAreaView>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    page: { flex: 1 },\n    text: { opacity: 0.6, marginTop: 1 },\n    container: {\n        backgroundColor: \"white\",\n        width: 150,\n        borderRadius: 5,\n        alignItems: \"center\",\n        padding: 10,\n    },\n    add: {\n        width: 200,\n        alignSelf: \"center\",\n        backgroundColor: \"#5DB075\",\n        borderRadius: 30,\n        paddingHorizontal: 20,\n        paddingVertical: 15,\n        alignItems: \"center\",\n    },\n    bin: { width: 15, height: 25 },\n    info: {\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        paddingBottom: 20,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    no_image: {\n        width: 300,\n        height: 200,\n        backgroundColor: \"grey\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginVertical: 8,\n        borderRadius: 10,\n    },\n    loc_image: {\n        width: 300,\n        height: 200,\n        marginVertical: 8,\n        borderRadius: 10,\n    },\n    tags: {\n        backgroundColor: \"#5DB075\",\n        paddingHorizontal: 8,\n        paddingVertical: 5,\n        borderRadius: 8,\n        marginRight: 5,\n        marginBottom: 10,\n    },\n    reward: {\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        paddingHorizontal: 20,\n        paddingVertical: 20,\n        //justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    map: {\n        ...StyleSheet.absoluteFillObject,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}