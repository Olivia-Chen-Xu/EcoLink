{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { FontAwesome, Feather } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddLocation(_ref) {\n  var currentLoc = _ref.currentLoc,\n      locations = _ref.locations,\n      setLocations = _ref.setLocations,\n      setAddedNew = _ref.setAddedNew,\n      posts = _ref.posts,\n      setPosts = _ref.setPosts,\n      ownPosts = _ref.ownPosts,\n      setOwnPosts = _ref.setOwnPosts,\n      navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locName = _useState4[0],\n      setLocName = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showPicker = _useState6[0],\n      setShowPicker = _useState6[1];\n\n  var _useState7 = useState([{\n    type: \"Plastic\",\n    selected: false\n  }, {\n    type: \"Paper\",\n    selected: false\n  }, {\n    type: \"Can\",\n    selected: false\n  }, {\n    type: \"Organics\",\n    selected: false\n  }, {\n    type: \"Landfill\",\n    selected: false\n  }, {\n    type: \"Glass\",\n    selected: false\n  }, {\n    type: \"Scrap Metal\",\n    selected: false\n  }, {\n    type: \"Fabrics\",\n    selected: false\n  }, {\n    type: \"Batteries\",\n    selected: false\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tags = _useState8[0],\n      setTags = _useState8[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n            setShowPicker(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openCamera = function openCamera() {\n    var permissionResult, result;\n    return _regeneratorRuntime.async(function openCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 2:\n            permissionResult = _context2.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context2.next = 6;\n              break;\n            }\n\n            alert(\"You've refused to allow this appp to access your camera!\");\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n          case 8:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n              setShowPicker(false);\n              console.log(result.uri);\n            }\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addNewLoc = function addNewLoc() {\n    navigation.navigate(\"MapPage\");\n    var selectedTags = [];\n    tags.forEach(function (tag) {\n      if (tag.selected === true) {\n        selectedTags.push(tag.type);\n      }\n    });\n    setLocations([].concat(_toConsumableArray(locations), [{\n      name: locName,\n      latitude: currentLoc.coords.latitude,\n      longitude: currentLoc.coords.longitude,\n      image: image,\n      tags: selectedTags,\n      numOfDropOffs: 0,\n      tonsRecycled: 0\n    }]));\n    setPosts([{\n      user: \"Olivia\",\n      userInfo: \"CS Student at Queen's\",\n      pfp: \"/Users/oliviachenxu/Documents/QueensGDSC/App/assets/olivia.jpg\",\n      image: image,\n      description: \"ðŸŽ‰ Earned 100 points for adding a location ðŸŽ‰\",\n      createdAt: new Date()\n    }].concat(_toConsumableArray(posts)));\n    setOwnPosts([{\n      user: \"Olivia\",\n      userInfo: \"CS Student at Queen's\",\n      pfp: \"/Users/oliviachenxu/Documents/QueensGDSC/App/assets/olivia.jpg\",\n      image: image,\n      description: \"ðŸŽ‰ Earned 100 points for adding a location ðŸŽ‰\",\n      createdAt: new Date()\n    }].concat(_toConsumableArray(ownPosts)));\n    setAddedNew(true);\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      backgroundColor: \"white\",\n      paddingHorizontal: 40\n    },\n    children: [_jsxs(TouchableOpacity, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        position: \"absolute\",\n        top: 60\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"MapPage\");\n      },\n      children: [_jsx(Feather, {\n        name: \"chevrons-left\",\n        size: 30,\n        color: \"#5DB075\"\n      }), _jsx(Text, {\n        style: {\n          color: \"#5DB075\",\n          fontWeight: \"600\",\n          fontSize: 16\n        },\n        children: \"Back\"\n      })]\n    }), _jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: \"700\",\n        marginBottom: 20\n      },\n      children: \"Enter New Location\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setLocName,\n      value: locName,\n      selectionColor: \"#4B9460\",\n      placeholder: \"Give a name for this new location\"\n    }), _jsxs(Text, {\n      style: {\n        fontSize: 18,\n        fontWeight: \"700\",\n        marginVertical: 10\n      },\n      children: [\"What can be recycled there?\", \" \"]\n    }), _jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n      },\n      children: tags.map(function (tag) {\n        return _jsx(TouchableOpacity, {\n          style: tag.selected ? styles.selected : styles.not_selected,\n          onPress: function onPress() {\n            return setTags(tags.map(function (t) {\n              return t == tag ? {\n                type: t.type,\n                selected: !t.selected\n              } : t;\n            }));\n          },\n          children: _jsx(Text, {\n            style: {\n              color: tag.selected ? \"white\" : \"#5DB075\",\n              fontSize: 12,\n              fontWeight: \"500\"\n            },\n            children: tag.type\n          })\n        });\n      })\n    }), !image && _jsxs(TouchableOpacity, {\n      style: styles.add_photo,\n      onPress: function onPress() {\n        return setShowPicker(true);\n      },\n      children: [_jsx(FontAwesome, {\n        name: \"photo\",\n        size: 30,\n        color: \"#5DB075\"\n      }), _jsx(Text, {\n        style: {\n          color: \"#5DB075\",\n          fontSize: 18,\n          fontWeight: \"600\",\n          marginLeft: 20\n        },\n        children: \"Add A Photo\"\n      })]\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        height: 200,\n        borderRadius: 10,\n        marginTop: 15\n      }\n    }), _jsx(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, styles.add_photo), {}, {\n        backgroundColor: \"#5DB075\"\n      }),\n      onPress: addNewLoc,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\",\n          fontSize: 18,\n          fontWeight: \"600\",\n          marginLeft: 20\n        },\n        children: \"Done\"\n      })\n    }), showPicker && _jsxs(View, {\n      style: {\n        position: \"absolute\",\n        backgroundColor: \"white\",\n        alignSelf: \"center\",\n        borderRadius: 10,\n        shadowColor: \"black\",\n        shadowOpacity: 0.2,\n        shadowRadius: 50,\n        paddingHorizontal: 10,\n        paddingVertical: 10\n      },\n      children: [_jsx(Button, {\n        onPress: openCamera,\n        title: \"Open camera\",\n        color: \"grey\"\n      }), _jsx(Button, {\n        title: \"Pick an image from camera roll\",\n        onPress: pickImage,\n        color: \"grey\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  input: {\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 12,\n    height: 50,\n    paddingLeft: 10,\n    marginBottom: 10\n  },\n  add_photo: {\n    flexDirection: \"row\",\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 12,\n    borderColor: \"#5DB075\",\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 15\n  },\n  selected: {\n    backgroundColor: \"#5DB075\",\n    borderWidth: 1,\n    borderColor: \"#5DB075\",\n    color: \"white\",\n    paddingHorizontal: 8,\n    paddingVertical: 5,\n    borderRadius: 8,\n    marginRight: 5,\n    marginVertical: 5\n  },\n  not_selected: {\n    borderWidth: 1,\n    borderColor: \"#5DB075\",\n    paddingHorizontal: 8,\n    paddingVertical: 5,\n    borderRadius: 8,\n    marginRight: 5,\n    marginVertical: 5\n  }\n});","map":{"version":3,"sources":["/Users/oliviachenxu/Documents/QueensGDSC/App/pages/AddLocation.js"],"names":["React","useState","FontAwesome","Feather","ImagePicker","AddLocation","currentLoc","locations","setLocations","setAddedNew","posts","setPosts","ownPosts","setOwnPosts","navigation","image","setImage","locName","setLocName","showPicker","setShowPicker","type","selected","tags","setTags","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","quality","result","console","log","cancelled","uri","openCamera","requestCameraPermissionsAsync","permissionResult","granted","alert","launchCameraAsync","addNewLoc","navigate","selectedTags","forEach","tag","push","name","latitude","coords","longitude","numOfDropOffs","tonsRecycled","user","userInfo","pfp","description","createdAt","Date","flex","justifyContent","backgroundColor","paddingHorizontal","flexDirection","alignItems","position","top","color","fontWeight","fontSize","marginBottom","styles","input","marginVertical","flexWrap","map","not_selected","t","add_photo","marginLeft","height","borderRadius","marginTop","alignSelf","shadowColor","shadowOpacity","shadowRadius","paddingVertical","StyleSheet","create","paddingLeft","borderWidth","borderColor","marginRight"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAUA,SAASC,WAAT,EAAsBC,OAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;AAEA,eAAe,SAASC,WAAT,OAUZ;AAAA,MATCC,UASD,QATCA,UASD;AAAA,MARCC,SAQD,QARCA,SAQD;AAAA,MAPCC,YAOD,QAPCA,YAOD;AAAA,MANCC,WAMD,QANCA,WAMD;AAAA,MALCC,KAKD,QALCA,KAKD;AAAA,MAJCC,QAID,QAJCA,QAID;AAAA,MAHCC,QAGD,QAHCA,QAGD;AAAA,MAFCC,WAED,QAFCA,WAED;AAAA,MADCC,UACD,QADCA,UACD;;AACC,kBAA0Bb,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8Bf,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOgB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAoCjB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOkB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAwBnB,QAAQ,CAAC,CAC7B;AAAEoB,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAD6B,EAE7B;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAF6B,EAG7B;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAH6B,EAI7B;AAAED,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAJ6B,EAK7B;AAAED,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAL6B,EAM7B;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAN6B,EAO7B;AAAED,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,QAAQ,EAAE;AAAjC,GAP6B,EAQ7B;AAAED,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAR6B,EAS7B;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAT6B,CAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAYA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEKrB,WAAW,CAACsB,uBAAZ,CAAoC;AACnDC,cAAAA,UAAU,EAAEvB,WAAW,CAACwB,gBAAZ,CAA6BC,GADU;AAInDC,cAAAA,OAAO,EAAE;AAJ0C,aAApC,CAFL;;AAAA;AAEVC,YAAAA,MAFU;AASdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,gBAAI,CAACA,MAAM,CAACG,SAAZ,EAAuB;AACnBlB,cAAAA,QAAQ,CAACe,MAAM,CAACI,GAAR,CAAR;AACH;;AACDf,YAAAA,aAAa,CAAC,KAAD,CAAb;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAgBA,MAAMgB,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGLhC,WAAW,CAACiC,6BAAZ,EAHK;;AAAA;AAETC,YAAAA,gBAFS;;AAAA,kBAKXA,gBAAgB,CAACC,OAAjB,KAA6B,KALlB;AAAA;AAAA;AAAA;;AAMXC,YAAAA,KAAK,CAAC,0DAAD,CAAL;AANW;;AAAA;AAAA;AAAA,6CAUMpC,WAAW,CAACqC,iBAAZ,EAVN;;AAAA;AAUTV,YAAAA,MAVS;AAafC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,gBAAI,CAACA,MAAM,CAACG,SAAZ,EAAuB;AACnBlB,cAAAA,QAAQ,CAACe,MAAM,CAACI,GAAR,CAAR;AACAf,cAAAA,aAAa,CAAC,KAAD,CAAb;AACAY,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACI,GAAnB;AACH;;AAnBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAqBA,MAAMO,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB5B,IAAAA,UAAU,CAAC6B,QAAX,CAAoB,SAApB;AAEA,QAAMC,YAAY,GAAG,EAArB;AACArB,IAAAA,IAAI,CAACsB,OAAL,CAAa,UAACC,GAAD,EAAS;AAClB,UAAIA,GAAG,CAACxB,QAAJ,KAAiB,IAArB,EAA2B;AACvBsB,QAAAA,YAAY,CAACG,IAAb,CAAkBD,GAAG,CAACzB,IAAtB;AACH;AACJ,KAJD;AAKAb,IAAAA,YAAY,8BACLD,SADK,IAER;AACIyC,MAAAA,IAAI,EAAE/B,OADV;AAEIgC,MAAAA,QAAQ,EAAE3C,UAAU,CAAC4C,MAAX,CAAkBD,QAFhC;AAGIE,MAAAA,SAAS,EAAE7C,UAAU,CAAC4C,MAAX,CAAkBC,SAHjC;AAIIpC,MAAAA,KAAK,EAAEA,KAJX;AAKIQ,MAAAA,IAAI,EAAEqB,YALV;AAMIQ,MAAAA,aAAa,EAAE,CANnB;AAOIC,MAAAA,YAAY,EAAE;AAPlB,KAFQ,GAAZ;AAYA1C,IAAAA,QAAQ,EACJ;AACI2C,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,QAAQ,EAAE,uBAFd;AAGIC,MAAAA,GAAG,EAAE,gEAHT;AAIIzC,MAAAA,KAAK,EAAEA,KAJX;AAKI0C,MAAAA,WAAW,EAAE,+CALjB;AAMIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AANf,KADI,4BASDjD,KATC,GAAR;AAWAG,IAAAA,WAAW,EACP;AACIyC,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,QAAQ,EAAE,uBAFd;AAGIC,MAAAA,GAAG,EAAE,gEAHT;AAIIzC,MAAAA,KAAK,EAAEA,KAJX;AAKI0C,MAAAA,WAAW,EAAE,+CALjB;AAMIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AANf,KADO,4BASJ/C,QATI,GAAX;AAWAH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GA5CD;;AA6CA,SACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHmD,MAAAA,IAAI,EAAE,CADH;AAEHC,MAAAA,cAAc,EAAE,QAFb;AAGHC,MAAAA,eAAe,EAAE,OAHd;AAIHC,MAAAA,iBAAiB,EAAE;AAJhB,KADX;AAAA,eAQI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,aAAa,EAAE,KADZ;AAEHC,QAAAA,UAAU,EAAE,QAFT;AAGHC,QAAAA,QAAQ,EAAE,UAHP;AAIHC,QAAAA,GAAG,EAAE;AAJF,OADX;AAOI,MAAA,OAAO,EAAE;AAAA,eAAMrD,UAAU,CAAC6B,QAAX,CAAoB,SAApB,CAAN;AAAA,OAPb;AAAA,iBASI,KAAC,OAAD;AACI,QAAA,IAAI,EAAC,eADT;AAEI,QAAA,IAAI,EAAE,EAFV;AAGI,QAAA,KAAK,EAAC;AAHV,QATJ,EAcI,KAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHyB,UAAAA,KAAK,EAAE,SADJ;AAEHC,UAAAA,UAAU,EAAE,KAFT;AAGHC,UAAAA,QAAQ,EAAE;AAHP,SADX;AAAA;AAAA,QAdJ;AAAA,MARJ,EAgCI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE,EAAZ;AAAgBD,QAAAA,UAAU,EAAE,KAA5B;AAAmCE,QAAAA,YAAY,EAAE;AAAjD,OAAb;AAAA;AAAA,MAhCJ,EAmCI,KAAC,SAAD;AACI,MAAA,KAAK,EAAEC,MAAM,CAACC,KADlB;AAEI,MAAA,YAAY,EAAEvD,UAFlB;AAGI,MAAA,KAAK,EAAED,OAHX;AAII,MAAA,cAAc,EAAE,SAJpB;AAKI,MAAA,WAAW,EAAC;AALhB,MAnCJ,EA0CI,MAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAAEqD,QAAAA,QAAQ,EAAE,EAAZ;AAAgBD,QAAAA,UAAU,EAAE,KAA5B;AAAmCK,QAAAA,cAAc,EAAE;AAAnD,OADX;AAAA,gDAGgC,GAHhC;AAAA,MA1CJ,EA+CI,KAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHV,QAAAA,aAAa,EAAE,KADZ;AAEHW,QAAAA,QAAQ,EAAE;AAFP,OADX;AAAA,gBAMKpD,IAAI,CAACqD,GAAL,CAAS,UAAC9B,GAAD;AAAA,eACN,KAAC,gBAAD;AACI,UAAA,KAAK,EACDA,GAAG,CAACxB,QAAJ,GAAekD,MAAM,CAAClD,QAAtB,GAAiCkD,MAAM,CAACK,YAFhD;AAII,UAAA,OAAO,EAAE;AAAA,mBACLrD,OAAO,CACHD,IAAI,CAACqD,GAAL,CAAS,UAACE,CAAD;AAAA,qBACLA,CAAC,IAAIhC,GAAL,GACM;AACIzB,gBAAAA,IAAI,EAAEyD,CAAC,CAACzD,IADZ;AAEIC,gBAAAA,QAAQ,EAAE,CAACwD,CAAC,CAACxD;AAFjB,eADN,GAKMwD,CAND;AAAA,aAAT,CADG,CADF;AAAA,WAJb;AAAA,oBAiBI,KAAC,IAAD;AACI,YAAA,KAAK,EAAE;AACHV,cAAAA,KAAK,EAAEtB,GAAG,CAACxB,QAAJ,GAAe,OAAf,GAAyB,SAD7B;AAEHgD,cAAAA,QAAQ,EAAE,EAFP;AAGHD,cAAAA,UAAU,EAAE;AAHT,aADX;AAAA,sBAOKvB,GAAG,CAACzB;AAPT;AAjBJ,UADM;AAAA,OAAT;AANL,MA/CJ,EAmFK,CAACN,KAAD,IACG,MAAC,gBAAD;AACI,MAAA,KAAK,EAAEyD,MAAM,CAACO,SADlB;AAEI,MAAA,OAAO,EAAE;AAAA,eAAM3D,aAAa,CAAC,IAAD,CAAnB;AAAA,OAFb;AAAA,iBAII,KAAC,WAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAE,EAFV;AAGI,QAAA,KAAK,EAAC;AAHV,QAJJ,EASI,KAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHgD,UAAAA,KAAK,EAAE,SADJ;AAEHE,UAAAA,QAAQ,EAAE,EAFP;AAGHD,UAAAA,UAAU,EAAE,KAHT;AAIHW,UAAAA,UAAU,EAAE;AAJT,SADX;AAAA;AAAA,QATJ;AAAA,MApFR,EA0GKjE,KAAK,IACF,KAAC,KAAD;AACI,MAAA,MAAM,EAAE;AAAEoB,QAAAA,GAAG,EAAEpB;AAAP,OADZ;AAEI,MAAA,KAAK,EAAE;AACHkE,QAAAA,MAAM,EAAE,GADL;AAEHC,QAAAA,YAAY,EAAE,EAFX;AAGHC,QAAAA,SAAS,EAAE;AAHR;AAFX,MA3GR,EAqHI,KAAC,gBAAD;AACI,MAAA,KAAK,kCAAOX,MAAM,CAACO,SAAd;AAAyBjB,QAAAA,eAAe,EAAE;AAA1C,QADT;AAEI,MAAA,OAAO,EAAEpB,SAFb;AAAA,gBAII,KAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACH0B,UAAAA,KAAK,EAAE,OADJ;AAEHE,UAAAA,QAAQ,EAAE,EAFP;AAGHD,UAAAA,UAAU,EAAE,KAHT;AAIHW,UAAAA,UAAU,EAAE;AAJT,SADX;AAAA;AAAA;AAJJ,MArHJ,EAoIK7D,UAAU,IACP,MAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACH+C,QAAAA,QAAQ,EAAE,UADP;AAEHJ,QAAAA,eAAe,EAAE,OAFd;AAGHsB,QAAAA,SAAS,EAAE,QAHR;AAIHF,QAAAA,YAAY,EAAE,EAJX;AAKHG,QAAAA,WAAW,EAAE,OALV;AAMHC,QAAAA,aAAa,EAAE,GANZ;AAOHC,QAAAA,YAAY,EAAE,EAPX;AAQHxB,QAAAA,iBAAiB,EAAE,EARhB;AASHyB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA,iBAaI,KAAC,MAAD;AACI,QAAA,OAAO,EAAEpD,UADb;AAEI,QAAA,KAAK,EAAC,aAFV;AAGI,QAAA,KAAK,EAAE;AAHX,QAbJ,EAkBI,KAAC,MAAD;AACI,QAAA,KAAK,EAAC,gCADV;AAEI,QAAA,OAAO,EAAEX,SAFb;AAGI,QAAA,KAAK,EAAE;AAHX,QAlBJ;AAAA,MArIR;AAAA,IADJ;AAiKH;AACD,IAAM+C,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC7BjB,EAAAA,KAAK,EAAE;AACHX,IAAAA,eAAe,EAAE,SADd;AAEHoB,IAAAA,YAAY,EAAE,EAFX;AAGHD,IAAAA,MAAM,EAAE,EAHL;AAIHU,IAAAA,WAAW,EAAE,EAJV;AAKHpB,IAAAA,YAAY,EAAE;AALX,GADsB;AAQ7BQ,EAAAA,SAAS,EAAE;AACPf,IAAAA,aAAa,EAAE,KADR;AAEPF,IAAAA,eAAe,EAAE,OAFV;AAGP8B,IAAAA,WAAW,EAAE,CAHN;AAIPV,IAAAA,YAAY,EAAE,EAJP;AAKPW,IAAAA,WAAW,EAAE,SALN;AAMPZ,IAAAA,MAAM,EAAE,EAND;AAOPpB,IAAAA,cAAc,EAAE,QAPT;AAQPI,IAAAA,UAAU,EAAE,QARL;AASPkB,IAAAA,SAAS,EAAE;AATJ,GARkB;AAmB7B7D,EAAAA,QAAQ,EAAE;AACNwC,IAAAA,eAAe,EAAE,SADX;AAEN8B,IAAAA,WAAW,EAAE,CAFP;AAGNC,IAAAA,WAAW,EAAE,SAHP;AAINzB,IAAAA,KAAK,EAAE,OAJD;AAKNL,IAAAA,iBAAiB,EAAE,CALb;AAMNyB,IAAAA,eAAe,EAAE,CANX;AAONN,IAAAA,YAAY,EAAE,CAPR;AAQNY,IAAAA,WAAW,EAAE,CARP;AASNpB,IAAAA,cAAc,EAAE;AATV,GAnBmB;AA8B7BG,EAAAA,YAAY,EAAE;AACVe,IAAAA,WAAW,EAAE,CADH;AAEVC,IAAAA,WAAW,EAAE,SAFH;AAGV9B,IAAAA,iBAAiB,EAAE,CAHT;AAIVyB,IAAAA,eAAe,EAAE,CAJP;AAKVN,IAAAA,YAAY,EAAE,CALJ;AAMVY,IAAAA,WAAW,EAAE,CANH;AAOVpB,IAAAA,cAAc,EAAE;AAPN;AA9Be,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    StyleSheet,\n    View,\n    TouchableOpacity,\n    Text,\n    Image,\n    Button,\n    TextInput,\n} from \"react-native\";\nimport { FontAwesome, Feather } from \"react-native-vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nexport default function AddLocation({\n    currentLoc,\n    locations,\n    setLocations,\n    setAddedNew,\n    posts,\n    setPosts,\n    ownPosts,\n    setOwnPosts,\n    navigation,\n}) {\n    const [image, setImage] = useState(null);\n    const [locName, setLocName] = useState(\"\");\n    const [showPicker, setShowPicker] = useState(false);\n    const [tags, setTags] = useState([\n        { type: \"Plastic\", selected: false },\n        { type: \"Paper\", selected: false },\n        { type: \"Can\", selected: false },\n        { type: \"Organics\", selected: false },\n        { type: \"Landfill\", selected: false },\n        { type: \"Glass\", selected: false },\n        { type: \"Scrap Metal\", selected: false },\n        { type: \"Fabrics\", selected: false },\n        { type: \"Batteries\", selected: false },\n    ]);\n\n    const pickImage = async () => {\n        // No permissions request is necessary for launching the image library\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            //allowsEditing: true,\n            //aspect: [4, 3],\n            quality: 1,\n        });\n\n        console.log(result);\n\n        if (!result.cancelled) {\n            setImage(result.uri);\n        }\n        setShowPicker(false);\n    };\n    const openCamera = async () => {\n        // Ask the user for the permission to access the camera\n        const permissionResult =\n            await ImagePicker.requestCameraPermissionsAsync();\n\n        if (permissionResult.granted === false) {\n            alert(\"You've refused to allow this appp to access your camera!\");\n            return;\n        }\n\n        const result = await ImagePicker.launchCameraAsync();\n\n        // Explore the result\n        console.log(result);\n\n        if (!result.cancelled) {\n            setImage(result.uri);\n            setShowPicker(false);\n            console.log(result.uri);\n        }\n    };\n    const addNewLoc = () => {\n        navigation.navigate(\"MapPage\");\n\n        const selectedTags = [];\n        tags.forEach((tag) => {\n            if (tag.selected === true) {\n                selectedTags.push(tag.type);\n            }\n        });\n        setLocations([\n            ...locations,\n            {\n                name: locName,\n                latitude: currentLoc.coords.latitude,\n                longitude: currentLoc.coords.longitude,\n                image: image,\n                tags: selectedTags,\n                numOfDropOffs: 0,\n                tonsRecycled: 0,\n            },\n        ]);\n        setPosts([\n            {\n                user: \"Olivia\",\n                userInfo: \"CS Student at Queen's\",\n                pfp: \"/Users/oliviachenxu/Documents/QueensGDSC/App/assets/olivia.jpg\",\n                image: image,\n                description: \"ðŸŽ‰ Earned 100 points for adding a location ðŸŽ‰\",\n                createdAt: new Date(),\n            },\n            ...posts,\n        ]);\n        setOwnPosts([\n            {\n                user: \"Olivia\",\n                userInfo: \"CS Student at Queen's\",\n                pfp: \"/Users/oliviachenxu/Documents/QueensGDSC/App/assets/olivia.jpg\",\n                image: image,\n                description: \"ðŸŽ‰ Earned 100 points for adding a location ðŸŽ‰\",\n                createdAt: new Date(),\n            },\n            ...ownPosts,\n        ]);\n        setAddedNew(true);\n    };\n    return (\n        <View\n            style={{\n                flex: 1,\n                justifyContent: \"center\",\n                backgroundColor: \"white\",\n                paddingHorizontal: 40,\n            }}\n        >\n            <TouchableOpacity\n                style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    position: \"absolute\",\n                    top: 60,\n                }}\n                onPress={() => navigation.navigate(\"MapPage\")}\n            >\n                <Feather\n                    name=\"chevrons-left\"\n                    size={30}\n                    color=\"#5DB075\"\n                ></Feather>\n                <Text\n                    style={{\n                        color: \"#5DB075\",\n                        fontWeight: \"600\",\n                        fontSize: 16,\n                    }}\n                >\n                    Back\n                </Text>\n            </TouchableOpacity>\n            <Text style={{ fontSize: 24, fontWeight: \"700\", marginBottom: 20 }}>\n                Enter New Location\n            </Text>\n            <TextInput\n                style={styles.input}\n                onChangeText={setLocName}\n                value={locName}\n                selectionColor={\"#4B9460\"}\n                placeholder=\"Give a name for this new location\"\n            />\n            <Text\n                style={{ fontSize: 18, fontWeight: \"700\", marginVertical: 10 }}\n            >\n                What can be recycled there?{\" \"}\n            </Text>\n            <View\n                style={{\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                }}\n            >\n                {tags.map((tag) => (\n                    <TouchableOpacity\n                        style={\n                            tag.selected ? styles.selected : styles.not_selected\n                        }\n                        onPress={() =>\n                            setTags(\n                                tags.map((t) =>\n                                    t == tag\n                                        ? {\n                                              type: t.type,\n                                              selected: !t.selected,\n                                          }\n                                        : t\n                                )\n                            )\n                        }\n                    >\n                        <Text\n                            style={{\n                                color: tag.selected ? \"white\" : \"#5DB075\",\n                                fontSize: 12,\n                                fontWeight: \"500\",\n                            }}\n                        >\n                            {tag.type}\n                        </Text>\n                    </TouchableOpacity>\n                ))}\n            </View>\n            {!image && (\n                <TouchableOpacity\n                    style={styles.add_photo}\n                    onPress={() => setShowPicker(true)}\n                >\n                    <FontAwesome\n                        name=\"photo\"\n                        size={30}\n                        color=\"#5DB075\"\n                    ></FontAwesome>\n                    <Text\n                        style={{\n                            color: \"#5DB075\",\n                            fontSize: 18,\n                            fontWeight: \"600\",\n                            marginLeft: 20,\n                        }}\n                    >\n                        Add A Photo\n                    </Text>\n                </TouchableOpacity>\n            )}\n\n            {image && (\n                <Image\n                    source={{ uri: image }}\n                    style={{\n                        height: 200,\n                        borderRadius: 10,\n                        marginTop: 15,\n                    }}\n                />\n            )}\n\n            <TouchableOpacity\n                style={{ ...styles.add_photo, backgroundColor: \"#5DB075\" }}\n                onPress={addNewLoc}\n            >\n                <Text\n                    style={{\n                        color: \"white\",\n                        fontSize: 18,\n                        fontWeight: \"600\",\n                        marginLeft: 20,\n                    }}\n                >\n                    Done\n                </Text>\n            </TouchableOpacity>\n            {showPicker && (\n                <View\n                    style={{\n                        position: \"absolute\",\n                        backgroundColor: \"white\",\n                        alignSelf: \"center\",\n                        borderRadius: 10,\n                        shadowColor: \"black\",\n                        shadowOpacity: 0.2,\n                        shadowRadius: 50,\n                        paddingHorizontal: 10,\n                        paddingVertical: 10,\n                    }}\n                >\n                    <Button\n                        onPress={openCamera}\n                        title=\"Open camera\"\n                        color={\"grey\"}\n                    />\n                    <Button\n                        title=\"Pick an image from camera roll\"\n                        onPress={pickImage}\n                        color={\"grey\"}\n                    />\n                </View>\n            )}\n        </View>\n    );\n}\nconst styles = StyleSheet.create({\n    input: {\n        backgroundColor: \"#F6F6F6\",\n        borderRadius: 12,\n        height: 50,\n        paddingLeft: 10,\n        marginBottom: 10,\n    },\n    add_photo: {\n        flexDirection: \"row\",\n        backgroundColor: \"white\",\n        borderWidth: 1,\n        borderRadius: 12,\n        borderColor: \"#5DB075\",\n        height: 50,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 15,\n    },\n    selected: {\n        backgroundColor: \"#5DB075\",\n        borderWidth: 1,\n        borderColor: \"#5DB075\",\n        color: \"white\",\n        paddingHorizontal: 8,\n        paddingVertical: 5,\n        borderRadius: 8,\n        marginRight: 5,\n        marginVertical: 5,\n    },\n    not_selected: {\n        borderWidth: 1,\n        borderColor: \"#5DB075\",\n        paddingHorizontal: 8,\n        paddingVertical: 5,\n        borderRadius: 8,\n        marginRight: 5,\n        marginVertical: 5,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}