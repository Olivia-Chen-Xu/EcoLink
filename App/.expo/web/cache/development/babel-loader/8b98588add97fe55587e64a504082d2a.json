{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Posts from \"./Posts\";\nimport AddPost from \"./AddPost\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function UserFeed(_ref) {\n  var posts = _ref.posts,\n      setPosts = _ref.setPosts,\n      ownPosts = _ref.ownPosts,\n      setOwnPosts = _ref.setOwnPosts;\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Posts\",\n      options: {\n        headerShown: false\n      },\n      children: function children(props) {\n        return _jsx(Posts, _objectSpread(_objectSpread({}, props), {}, {\n          posts: posts\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AddPost\",\n      options: {\n        headerShown: false\n      },\n      children: function children(props) {\n        return _jsx(AddPost, _objectSpread(_objectSpread({}, props), {}, {\n          posts: posts,\n          setPosts: setPosts,\n          ownPosts: ownPosts,\n          setOwnPosts: setOwnPosts\n        }));\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/oliviachenxu/Documents/QueensGDSC/App/pages/UserFeed.js"],"names":["React","useState","createNativeStackNavigator","Posts","AddPost","Stack","UserFeed","posts","setPosts","ownPosts","setOwnPosts","headerShown","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;;;AAEA,IAAMC,KAAK,GAAGH,0BAA0B,EAAxC;AAEA,eAAe,SAASI,QAAT,OAA8D;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,WAAe,QAAfA,WAAe;AACzE,SACI,MAAC,KAAD,CAAO,SAAP;AAAA,eACI,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,OAAO,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAApC;AAAA,gBACK,kBAACC,KAAD;AAAA,eAAW,KAAC,KAAD,kCAAWA,KAAX;AAAkB,UAAA,KAAK,EAAEL;AAAzB,WAAX;AAAA;AADL,MADJ,EAII,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,OAAO,EAAE;AAAEI,QAAAA,WAAW,EAAE;AAAf,OAAtC;AAAA,gBACK,kBAACC,KAAD;AAAA,eACG,KAAC,OAAD,kCACQA,KADR;AAEI,UAAA,KAAK,EAAEL,KAFX;AAGI,UAAA,QAAQ,EAAEC,QAHd;AAII,UAAA,QAAQ,EAAEC,QAJd;AAKI,UAAA,WAAW,EAAEC;AALjB,WADH;AAAA;AADL,MAJJ;AAAA,IADJ;AAkBH","sourcesContent":["import React, { useState } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Posts from \"./Posts\";\nimport AddPost from \"./AddPost\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function UserFeed({ posts, setPosts, ownPosts, setOwnPosts }) {\n    return (\n        <Stack.Navigator>\n            <Stack.Screen name=\"Posts\" options={{ headerShown: false }}>\n                {(props) => <Posts {...props} posts={posts}></Posts>}\n            </Stack.Screen>\n            <Stack.Screen name=\"AddPost\" options={{ headerShown: false }}>\n                {(props) => (\n                    <AddPost\n                        {...props}\n                        posts={posts}\n                        setPosts={setPosts}\n                        ownPosts={ownPosts}\n                        setOwnPosts={setOwnPosts}\n                    ></AddPost>\n                )}\n            </Stack.Screen>\n        </Stack.Navigator>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}